{
  "split": {
    "prefix": "split",
    "body": [
      "std::vector<std::string> split(const std::string& s, const char delim) {",
      "  size_t left = 0;",
      "  std::vector<std::string> ret;",
      "  for (size_t right = 0; (right = s.find(delim, right)) != std::string::npos;",
      "       ++right) {",
      "    ret.push_back(s.substr(left, right - left));",
      "    left = right + 1;",
      "  }",
      "  ret.push_back(s.substr(left));",
      "  return ret;",
      "}"
    ],
    "description": "String split"
  },
  "split2": {
    "prefix": "split2",
    "body": [
      "std::vector<std::string> split(const std::string& s, const char delim) {",
      "  std::stringstream ss(s);",
      "  std::vector<std::string> ret;",
      "  std::string x;",
      "  while (std::getline(ss, x, delim)) {",
      "    ret.push_back(x);",
      "  }",
      "  return ret;",
      "}"
    ],
    "description": "String split"
  },
  "to_binary": {
    "prefix": "to_binary",
    "body": [
      "std::string to_binary(int a) {",
      "  std::string s;",
      "  while (a != 0) {",
      "    s = (a % 2 == 0 ? '0' : '1') + s;",
      "    a /= 2;",
      "  }",
      "  return s;",
      "}"
    ],
    "description": "Convert int to binary"
  }
}
